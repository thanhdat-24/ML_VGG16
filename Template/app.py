import streamlit as st
import tensorflow as tf
import numpy as np
import gdown
import os
from PIL import Image
import config

# ƒê∆∞·ªùng d·∫´n Google Drive (file ID t·ª´ link c·ªßa b·∫°n)
GDRIVE_MODEL_URL = "https://drive.google.com/uc?id=1OtNAPdyyb2Lf3jmHUVd3lYp5kA_gbSBZ"
MODEL_PATH = "vgg16_fruits360.h5"

# T·∫£i model n·∫øu ch∆∞a c√≥
@st.cache_resource
def load_model():
    if not os.path.exists(MODEL_PATH):  # Ki·ªÉm tra n·∫øu model ch∆∞a t·ªìn t·∫°i
        st.info("ƒêang t·∫£i model, vui l√≤ng ch·ªù...")
        gdown.download(GDRIVE_MODEL_URL, MODEL_PATH, quiet=False)

    return tf.keras.models.load_model(MODEL_PATH)

# Load model
model = load_model()
class_labels = config.CLASS_NAMES  # C·∫≠p nh·∫≠t danh s√°ch l·ªõp

# H√†m ti·ªÅn x·ª≠ l√Ω ·∫£nh
def preprocess_image(image):
    image = image.resize((100, 100))  # Resize ·∫£nh v·ªÅ k√≠ch th∆∞·ªõc ph√π h·ª£p
    image = np.array(image) / 255.0   # Chu·∫©n h√≥a pixel v·ªÅ [0,1]
    image = np.expand_dims(image, axis=0)  # Th√™m batch dimension
    return image

# Giao di·ªán Streamlit
st.title("Nh·∫≠n di·ªán hoa qu·∫£ üçéüçåüçä")
st.write("T·∫£i ·∫£nh hoa qu·∫£ l√™n ƒë·ªÉ h·ªá th·ªëng nh·∫≠n di·ªán lo·∫°i qu·∫£ v√† ƒë·ªô ch√≠nh x√°c.")

uploaded_file = st.file_uploader("Ch·ªçn ·∫£nh...", type=["jpg", "png", "jpeg"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="·∫¢nh ƒë√£ t·∫£i l√™n", use_column_width=True)

    if st.button("D·ª± ƒëo√°n"):
        processed_image = preprocess_image(image)
        predictions = model.predict(processed_image)
        predicted_class = class_labels[np.argmax(predictions)]
        confidence = round(100 * np.max(predictions), 2)

        st.success(f"**K·∫øt qu·∫£:** {predicted_class} üçè")
        st.info(f"**ƒê·ªô ch√≠nh x√°c:** {confidence}%")